
package org.taller.moduloDeTransferencia.wscliente;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BancoClienteService", targetNamespace = "http://ws.bancoClienteMock.taller.org/", wsdlLocation = "http://localhost:8080/BancoClienteMock/BancoClienteService?wsdl")
public class BancoClienteService_Service
    extends Service
{

    private final static URL BANCOCLIENTESERVICE_WSDL_LOCATION;
    private final static WebServiceException BANCOCLIENTESERVICE_EXCEPTION;
    private final static QName BANCOCLIENTESERVICE_QNAME = new QName("http://ws.bancoClienteMock.taller.org/", "BancoClienteService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            URI uri = new URI("http://localhost:8080/BancoClienteMock/BancoClienteService?wsdl");
            url = uri.toURL();
        } catch (URISyntaxException | MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BANCOCLIENTESERVICE_WSDL_LOCATION = url;
        BANCOCLIENTESERVICE_EXCEPTION = e;
    }

    public BancoClienteService_Service() {
        super(__getWsdlLocation(), BANCOCLIENTESERVICE_QNAME);
    }

    public BancoClienteService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), BANCOCLIENTESERVICE_QNAME, features);
    }

    public BancoClienteService_Service(URL wsdlLocation) {
        super(wsdlLocation, BANCOCLIENTESERVICE_QNAME);
    }

    public BancoClienteService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BANCOCLIENTESERVICE_QNAME, features);
    }

    public BancoClienteService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BancoClienteService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BancoClienteService
     */
    @WebEndpoint(name = "BancoClientePort")
    public BancoClienteService getBancoClientePort() {
        return super.getPort(new QName("http://ws.bancoClienteMock.taller.org/", "BancoClientePort"), BancoClienteService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BancoClienteService
     */
    @WebEndpoint(name = "BancoClientePort")
    public BancoClienteService getBancoClientePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.bancoClienteMock.taller.org/", "BancoClientePort"), BancoClienteService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BANCOCLIENTESERVICE_EXCEPTION!= null) {
            throw BANCOCLIENTESERVICE_EXCEPTION;
        }
        return BANCOCLIENTESERVICE_WSDL_LOCATION;
    }

}
